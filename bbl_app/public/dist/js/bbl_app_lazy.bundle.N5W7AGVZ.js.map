{
  "version": 3,
  "sources": ["../../../../../apps/bbl_app/bbl_app/public/js/steel_batch_parse.js"],
  "sourcesContent": ["\nString.prototype.replaceAll = function(s1,s2){\n    return this.replace(new RegExp(s1,\"gm\"),s2);\n}\n\n//\u94A2\u68D2\u4E8C\u7EF4\u7801\u89E3\u6790\nvar GangbangParse = {\n\n    errMsg: false,\n    uploadBean: null,\n\n\n    getCompanys: function () {\n        let a = [\"\", this.xianggang, this.jigang, this.yegang, this.xinxing];\n        return a;\n    },\n    \n    parse: function (qrcodeStr) {\n        qrcodeStr = qrcodeStr.trim();\n        qrcodeStr = qrcodeStr.replaceAll(\"<br />\", \" \");\n        qrcodeStr = qrcodeStr.replaceAll(\"\\n\", \" \");\n        qrcodeStr = qrcodeStr.replaceAll(\"smq750_\", \"\");  //\u53BB\u9664PDA\u626B\u63CF\u67AA\u524D\u7F00\n        qrcodeStr = qrcodeStr.replaceAll(\"\\\"\", \"\");\n        qrcodeStr = qrcodeStr.replaceAll(\"\\'\", \"\");\n        \n        this.uploadBean = {};\n        if (this.yegangParse(qrcodeStr) \n                || this.jigangParse(qrcodeStr) \n                || this.xianggangParse(qrcodeStr)\n                || this.xinxingParse(qrcodeStr)\n                || this.dongteParse(qrcodeStr))\n            return this.uploadBean;\n        return false;\n    },\n\n    parseBundleNo: function (qrcodeStr) {\n        if  (this.parse(qrcodeStr)) {\n            return this.uploadBean.bundleNo;\n        }\n        return false;\n    },\n\n    yegangParse: function (qrcodeStr){\n        let company = \"\u5927\u51B6\u7279\u6B8A\u94A2\u6709\u9650\u516C\u53F8\";\n\n        if (!qrcodeStr.endsWith(company)) {\n            return false;\n        }\n        let matchKeys = [[\"\u5408\u540C\u53F7\", \"contractNo\"],\n            [\"\u724C\u53F7\", \"steelGrade\"],\n            [\"\u89C4\u683C\", \"diaSize\"],\n            [\"\u6807\u51C6\", \"standardNo\"],\n            [\"\u5361\u7247\u53F7\", \"bundleNo\"],\n            [\"\u7089\u53F7\", \"heatNo\"],\n            [\"\u6346\u53F7\", \"bundleIdx\"],\n            [\"\u652F\u6570\", \"bundleNum\"],\n            [\"\u91CD\u91CF\", \"weight\"],\n            [\"\u65E5\u671F\", \"productDate\"],\n        ];\n\n        let kvStringArray = qrcodeStr.split(\",\");\n        let kv;\n        let kvString;\n\n        lbl1:\n            for (let j = 0; j < kvStringArray.length; j++) {\n                kvString = kvStringArray[j];\n                kv = kvString.split(\":\");\n                for (let i = 0; i < matchKeys.length; i++) {\n                    if (kv[0] == matchKeys[i][0]) {\n                        this.uploadBean[matchKeys[i][1]] = kv[1];\n                        continue lbl1;\n                    }\n                }\n            }\n        this.uploadBean.bundleNo = this.uploadBean.bundleNo +\n            \"/\" + this.uploadBean.bundleIdx +\n            \"/\" + this.uploadBean.bundleNum;\n\n        let dia_lenth = this.uploadBean.diaSize.split(\"\u00D7\");\n        this.uploadBean.diaSize = dia_lenth[0];\n        this.uploadBean.length = dia_lenth[1];\n\n        if (this.uploadBean.steelGrade.length < 3)\n            this.uploadBean.steelGrade = \"C\" + this.uploadBean.steelGrade;\n        this.uploadBean.diaSize = this.uploadBean.diaSize.slice(1);\n        this.uploadBean.company = \"\u5927\u51B6\u7279\u94A2\";\n        return this.uploadBean;\n    },\n\n    jigangParse: function (qrcodeStr){\n        qrcodeStr = qrcodeStr.replaceAll(\"-.-\", \"-\").replace(\"BL\", \"\");\n        if (qrcodeStr.startsWith(\"D\")) {\n            let strs = qrcodeStr.split(\"-\");\n            if (12 != strs[0].length ) {\n                return false;\n            }\n    \n            this.uploadBean.company = \"\u6D4E\u6E90\u94A2\u94C1\";\n            this.uploadBean.bundleNo = strs[0];\n            this.uploadBean.heatNo = strs[0].replace(\"D\",\"V\").slice(0, -3);\n            if (strs[1].length < 3) {\n                strs[1] = \"C\" + strs[1];\n            }\n            this.uploadBean.steelGrade = strs[1];\n            this.uploadBean.diaSize = strs[2].substring(1);\n            this.uploadBean.weight = strs[3];\n            this.uploadBean.productDate = strs[4].slice(0, 4) + \"-\" + strs[4].slice(4, 6)  + \"-\" + strs[4].slice(6) ;\n    \n            return this.uploadBean;\n        }\n\n        if (qrcodeStr.startsWith(\"\u516C\u53F8:\u6D4E\u6E90\u94A2\u94C1\")) {\n            let matchKeys = [\n                [\"\u516C\u53F8\", \"company\"],\n                [\"\u94A2\u79CD\", \"steelGrade\"],\n                [\"\u89C4\u683C\", \"diaSize\"],\n                [\"\u6807\u51C6\", \"standardNo\"],\n                [\"\u5408\u540C\u53F7\", \"contractNo\"],\n                [\"\u7089\u53F7\", \"heatNo\"],\n                [\"\u6346\u53F7\", \"bundleNo\"],\n                [\"\u652F\u6570\", \"bundleNum\"],\n                [\"\u91CD\u91CF\", \"weight\"],\n                [\"\u751F\u4EA7\u65E5\u671F\", \"productDate\"],\n            ];\n\n            let kvStringArray = qrcodeStr.split(\" \");\n            let kv;\n            let kvString;\n\n            lbl1:\n                for (let j = 0; j < kvStringArray.length; j++) {\n                    kvString = kvStringArray[j];\n                    kv = kvString.split(\":\");\n                    for (let i = 0; i < matchKeys.length; i++) {\n                        if (kv[0] == matchKeys[i][0]) {\n                            this.uploadBean[matchKeys[i][1]] = kv[1];\n                            continue lbl1;\n                        }\n                    }\n                }\n\n            console.log('uploadBean', this.uploadBean);\n\n            if (this.uploadBean.diaSize) {\n                let dia_length = this.uploadBean.diaSize.split(\"*\");\n                this.uploadBean.diaSize = dia_length[0];\n                this.uploadBean.length = dia_length[1];\n            }\n\n            this.uploadBean.steelGrade = this.uploadBean.steelGrade.split(\"-\")[0];\n            if (this.uploadBean.steelGrade.length < 3)\n                this.uploadBean.steelGrade = \"C\" + this.uploadBean.steelGrade;\n            this.uploadBean.diaSize = this.uploadBean.diaSize.slice(1);\n            // this.uploadBean.company = \"\";\n            return this.uploadBean;\n        }\n        return false\n\n    },\n\n    xianggangParse: function (qrcodeStr){\n        if (!qrcodeStr.startsWith(\"\u6E56\u5357\u534E\u83F1\")) {\n            return false;\n        }\n        qrcodeStr = qrcodeStr.replaceAll(\"\\\\(L\\\\)\", \"\");\n        qrcodeStr = qrcodeStr.replaceAll(\"\uFF0C\", \" \");\n\n        let matchKeys = [\"\u6E56\u5357\u534E\u83F1\", \"\u4EA7\u54C1\u540D\u79F0\", \"\u724C\u53F7\", \"\u6280\u672F\u6807\u51C6\", \"\u6750\u6599\u53F7\", \"\u89C4\u683C(\u03A6)\", \"\u5B9A\u5C3A\u957F\u5EA6\", \"\u652F\u6570\", \"\u91CD\u91CF\",\n            \"\u7089\u53F7\", \"\u8BB8\u53EF\u8BC1\", \"\u5408\u540C\u53F7\", \"\u5236\u9020\u5382\", \"\u751F\u4EA7\u65E5\u671F\"];\n        let keys = [\"company\", \"productName\", \"steelGrade\", \"standardNo\", \"bundleNo\", \"diaSize\", \"length\", \"bundleNum\", \"weight\",\n            \"heatNo\", \"prodLisence\", \"contractNo\", \"factory\", \"productDate\"];\n        let indx = [];\n        for (let i = 1; i < matchKeys.length; i++) {\n            indx[i] = qrcodeStr.indexOf(matchKeys[i]);\n        }\n        this.uploadBean.company = \"\u534E\u83F1\u6E58\u94A2\";\n\n        let nextIndex;\n        for (let i = 1; i < keys.length - 1; i++) {\n            if (indx[i] != -1) {\n                if (i == keys.length) {\n                    nextIndex = null;\n                } else if (indx[i + 1] != -1) {\n                    nextIndex = indx[i + 1];\n                } else {\n                    nextIndex = indx[i + 2];\n                }\n                this.uploadBean[keys[i]] = qrcodeStr.slice(indx[i] + matchKeys[i].length + 1, nextIndex)\n            }\n        }\n        this.uploadBean[keys[keys.length - 1]] = qrcodeStr.slice(indx[keys.length -1] + matchKeys[keys.length - 1].length + 1);\n\n        this.uploadBean.bundleIdx = this.uploadBean.bundleNo.split(\"/\")[1];\n        if (!isNaN(Number(this.uploadBean.steelGrade))) {\n            this.uploadBean.steelGrade = this.uploadBean.steelGrade.trim() + \"H\";\n        }\n        return this.uploadBean;\n    },\n    \n    // http://abc.whxxzg.com:8327?p=24602010&k=25&w=3385&sp=2460201001&g=\u03A695mm*6m&s=40Cr&a=xxzg\n    xinxingParse: function (qrcodeStr){\n        let company = \"\u65B0\u5174\u94F8\u6784\";\n        let identifier = \"http://abc.whxxzg\"\n        if (!qrcodeStr.startsWith(identifier)) {\n            return false;\n        }\n        qrcodeStr = qrcodeStr.replaceAll(\"http.*\\\\?\", \"\");\n        \n        let matchKeys = [\n            [\"s\", \"steelGrade\"],\n            [\"g\", \"diaSize\"],\n            [\"p\", \"bundleNo\"],\n            // [\"\u7089\u53F7\", \"heatNo\"], no\n            [\"k\", \"bundleIdx\"],\n            // [\"\u652F\u6570\", \"bundleNum\"], no\n            [\"w\", \"weight\"],\n            [\"a\", \"company\"],\n            [\"sp\", \"sp\"],\n        ];\n\n        let kvStringArray = qrcodeStr.split(\"&\");\n        let kv;\n        let kvString;\n\n        lbl1:\n            for (let j = 0; j < kvStringArray.length; j++) {\n                kvString = kvStringArray[j];\n                kv = kvString.split(\"=\");\n                for (let i = 0; i < matchKeys.length; i++) {\n                    if (kv[0] == matchKeys[i][0]) {\n                        this.uploadBean[matchKeys[i][1]] = kv[1];\n                        continue lbl1;\n                    }\n                }\n            }\n        this.uploadBean.bundleNo = this.uploadBean.bundleNo;\n\n        if (this.uploadBean.diaSize) {\n            let dia_length = this.uploadBean.diaSize.split(\"*\");\n            this.uploadBean.diaSize = dia_length[0];\n            this.uploadBean.length = parseInt(dia_length[1]) * 1000 ;\n        }\n\n        if (this.uploadBean.steelGrade.length < 3)\n            this.uploadBean.steelGrade = \"C\" + this.uploadBean.steelGrade;\n        this.uploadBean.diaSize = this.uploadBean.diaSize.slice(1);\n        this.uploadBean.company = company;\n        return this.uploadBean;\n    },\n\n    dongteParse: function (qrcodeStr){\n        let company = \"\u4E1C\u65B9\u7279\u94A2\";\n        // let identifier = \"\u4EE3\u7801:0104030071\"\n        let identifier = \"\u4EE3\u7801:0104\"\n        if (!qrcodeStr.startsWith(identifier)) {\n            return false;\n        }\n        \n        let matchKeys = [\n            [\"\u540D\u79F0\", \"steelGrade\"],\n            [\"\u89C4\u683C\", \"diaSizeLength\"],\n            [\"\u91CD\u91CF\", \"weight\"],\n            [\"\u7089\u53F7\", \"heatNo\"],\n            [\"\u8F67\u5236\u6279\u53F7\", \"bundleNo\"],\n            [\"\u4E8C\u7EF4\u7801\", \"qrcode\"],\n            [\"\u4EE3\u7801\", \"companyCode\"],\n        ];\n\n        let kvStringArray = qrcodeStr.split(\";\");\n        let kv;\n        let kvString;\n\n        lbl1:\n            for (let j = 0; j < kvStringArray.length; j++) {\n                kvString = kvStringArray[j];\n                kv = kvString.split(\":\");\n                for (let i = 0; i < matchKeys.length; i++) {\n                    if (kv[0] == matchKeys[i][0]) {\n                        this.uploadBean[matchKeys[i][1]] = kv[1];\n                        continue lbl1;\n                    }\n                }\n            }\n        this.uploadBean.bundleNo = this.uploadBean.bundleNo + \"-\" + this.uploadBean.qrcode;\n        let dia_length = this.uploadBean.diaSizeLength.split(\"*\");\n        this.uploadBean.diaSize = dia_length[0].slice(1);\n        this.uploadBean.length = dia_length[1] || \"\";\n        this.uploadBean.steelGrade = this.uploadBean.steelGrade.replaceAll(\"\u5706\u94A2\", \"\").trim();\n        // this.uploadBean.steelGrade = \"C\" + this.uploadBean.steelGrade;\n        this.uploadBean.company = company;\n        console.log(\"bean\", this.uploadBean)\n        return this.uploadBean;\n    },\n};\n\n\n"],
  "mappings": ";;AACA,SAAO,UAAU,aAAa,SAAS,IAAG,IAAG;AACzC,WAAO,KAAK,QAAQ,IAAI,OAAO,IAAG,IAAI,GAAE,EAAE;AAAA,EAC9C;",
  "names": []
}
